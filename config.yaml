world:
  size: [100, 100]
  tick_rate: 10
  max_entities: 8000
  paused_for_angel_timeout_seconds: 60

llm:
  mode: live
  agent_decision_model: "google/gemini-flash-1.5-8b"
  angel_generation_model: "google/gemini-flash-1.5-8b"

# paths:
#   abilities_vault: "./agent_world/abilities/vault"
#   abilities_generated: "./agent_world/abilities/generated"
#   abilities_builtin: "./agent_world/abilities/builtin"

cache:
  sprite_max: 10000      # max images in RAM
  log_retention_mb: 50   # event-log rotation

logging:
  global_level: "INFO" # Default for all modules
  module_levels:
    agent_world.ai.llm.llm_manager: "DEBUG"         # Detailed LLM communication
    agent_world.ai.llm.prompt_builder: "DEBUG"    # See full prompts only when needed for this module
    agent_world.ai.prompt_builder: "INFO"         # The higher-level one can be INFO
    agent_world.ai.angel.system: "DEBUG"          # Angel system decisions
    agent_world.ai.angel.generator: "INFO"
    agent_world.ai.planning.llm_planner: "DEBUG"  # Planner decisions and prompts
    agent_world.systems.ai.ai_reasoning_system: "DEBUG" # Core AI decision loop, plans, actions
    agent_world.systems.ai.action_execution_system: "DEBUG" # Usually INFO is enough here
    agent_world.systems.ai.actions: "DEBUG"        # Action parsing can be INFO unless debugging parsing
    # agent_world.systems.movement.physics_system: "INFO" # Set to DEBUG if you need physics step-by-step
    # agent_world.systems.movement.movement_system: "INFO" # Set to DEBUG if you need movement step-by-step
    # __main__: "DEBUG" # If you want main.py itself to be very verbose